#!/usr/bin/env node

/**
 * Áµ±ÂêàË®≠ÂÆöÁîüÊàê„Çπ„ÇØ„É™„Éó„Éà
 * „Éû„Çπ„Çø„ÉºË®≠ÂÆö„Åã„ÇâÂÖ®„Å¶„ÅÆË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÇíËá™ÂãïÁîüÊàê
 */

const path = require('path');
const fs = require('fs');
const UnifiedConfigManager = require('../src/utils/UnifiedConfigManager');

async function main() {
    console.log('üîß OwnServer Manager - Áµ±ÂêàË®≠ÂÆöÁîüÊàê„ÉÑ„Éº„É´');
    console.log('================================================');

    try {
        // config „Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ‰ΩúÊàê
        const configDir = path.join(__dirname, '..', 'config');
        if (!fs.existsSync(configDir)) {
            fs.mkdirSync(configDir, { recursive: true });
            console.log(`üìÅ Created config directory: ${configDir}`);
        }

        const masterConfigPath = path.join(configDir, 'master.json');
        const configManager = new UnifiedConfigManager(masterConfigPath);

        // master.json „ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÁîüÊàê
        if (!fs.existsSync(masterConfigPath)) {
            console.log('‚ùå master.json not found. Generating template...');
            await configManager.generateMasterTemplate();
            console.log('');
            console.log('üìù Please edit config/master.json with your actual values:');
            console.log('   - cloudflare.domain');
            console.log('   - cloudflare.apiToken'); 
            console.log('   - cloudflare.zoneId');
            console.log('   - cloudflare.email');
            console.log('');
            console.log('Then run this script again to generate all config files.');
            return;
        }

        // „Éû„Çπ„Çø„ÉºË®≠ÂÆö„ÇíË™≠„ÅøËæº„Åø
        await configManager.loadMasterConfig();
        
        // Ë®≠ÂÆö„ÇíÊ§úË®º
        configManager.validateMasterConfig();
        
        // ÂÖ®„Å¶„ÅÆË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê
        await configManager.generateAllConfigs();
        
        console.log('');
        console.log('üéâ Configuration generation completed!');
        console.log('');
        console.log('Generated files:');
        console.log('  ‚úÖ config/config.json');
        console.log('  ‚úÖ config/.env');
        console.log('  ‚úÖ config/docker.env');
        console.log('  ‚úÖ config/production.env');
        console.log('');
        console.log('You can now run:');
        console.log('  docker compose up -d');
        console.log('  OR');
        console.log('  npm start');

    } catch (error) {
        console.error('‚ùå Error generating configuration:', error.message);
        process.exit(1);
    }
}

// „Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥ÂºïÊï∞„ÅÆÂá¶ÁêÜ
const args = process.argv.slice(2);

if (args.includes('--help') || args.includes('-h')) {
    console.log('OwnServer Manager - Áµ±ÂêàË®≠ÂÆöÁîüÊàê„ÉÑ„Éº„É´');
    console.log('');
    console.log('‰ΩøÁî®ÊñπÊ≥ï:');
    console.log('  node scripts/config-generator.js');
    console.log('');
    console.log('„Ç™„Éó„Ç∑„Éß„É≥:');
    console.log('  --help, -h     „Åì„ÅÆ„Éò„É´„Éó„ÇíË°®Á§∫');
    console.log('  --template     master.json.example „ÅÆ„ÅøÁîüÊàê');
    console.log('');
    console.log('ÊâãÈ†Ü:');
    console.log('  1. config/master.json „ÇíÁ∑®ÈõÜ');
    console.log('  2. „Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÇíÂÆüË°å');
    console.log('  3. ÂÖ®„Å¶„ÅÆË®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅåËá™ÂãïÁîüÊàê„Åï„Çå„Åæ„Åô');
    process.exit(0);
}

if (args.includes('--template')) {
    console.log('üìù Generating master.json template only...');
    const configDir = path.join(__dirname, '..', 'config');
    if (!fs.existsSync(configDir)) {
        fs.mkdirSync(configDir, { recursive: true });
    }
    const configManager = new UnifiedConfigManager(path.join(configDir, 'master.json'));
    configManager.generateMasterTemplate().then(() => {
        console.log('‚úÖ Template generated: config/master.json.example');
        console.log('Copy it to config/master.json and edit with your values.');
    }).catch(error => {
        console.error('‚ùå Error:', error.message);
        process.exit(1);
    });
} else {
    main();
}
